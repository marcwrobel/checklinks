#!/usr/bin/env bash

set -uo pipefail

USER_AGENT='Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0'
RETRY=1
RETRY_DELAY=10
TIMEOUT=3 # seconds

URL_REGEX='https?://[^][{} "`<>),*$|\\]*[^][{} "`<>),*$|\\.:'"'"']'
EXCLUDED_URLS="https?://(\
localhost|\
[0-9]+|\
.+:[0-9]+|\
.+__LATEST__|\
.+__RELEASE_CYCLE__|\
abc|\
acme|\
anyhost|\
application|\
custom|\
example|\
foo|\
host|\
link|\
myhost|\
mysite|\
myusername|\
nohost|\
nowhere|\
somehost|\
testuser|\
url|\
wrong|\
www.bar|\
www.foo|\
www.server|\
your-server-url|\
[^/]+.acme|\
[^/]+.example|\
apache.org/xml|\
java.sun.com/xml|\
java.sun.com/notes|\
java.sun.com/j2ee/dtds|\
jkrowling.com|\
logging.apache.org/log4j/2.0|\
maven.apache.org/changes|\
maven.apache.org/maven-v4_0_0.xsd|\
maven.apache.org/plugins/maven-assembly-plugin/assembly|\
maven.apache.org/POM|\
maven.apache.org/SETTINGS|\
maven.apache.org/xsd|\
news.gmane.org|\
old.nabble.com|\
registry.npmjs.org|\
www.apache.org/xml|\
www.liquibase.org/xml|\
www.oasis-open.org/docbook/xml|\
www.springframework.org/schema|\
www.w3.org/1998|\
www.w3.org/1999|\
www.w3.org/2000|\
www.w3.org/2001|\
www.w3.org/TR/xhtml1/DTD|\
xml.org/sax/features|\
xmlns.jcp.org/xml|\
javax.xml.XMLConstants\
)"

# Those links are localized or updated.
EXCLUDED_REDIRECTS="https://(\
aka.ms|\
aws.amazon.com|\
azure.microsoft.com|\
cdn.amazonlinux.com|\
dotnet.microsoft.com|\
euro-linux.com  |\
github.com|\
img.shields.io|\
learn.microsoft.com|\
stackoverflow.com/a|\
support.apple.com|\
support.fortinet.com|\
support.hashicorp.com|\
support.microsoft.com|\
support.mozilla.org|\
unpkg.com|\
www.amazon.com|\
www.apple.com|\
www.microsoft.com|\
www.mozilla.org\
)"

# https://www.shellhacks.com/bash-colors/
LIGHT_GREEN='\033[1;32m'
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NO_COLOR='\033[0m'

# --compressed : https://github.com/github/docs/issues/17358
function doCurl() {
  url=$1
  write_out=${2:-http_code}
  options=${3:-}
  curl -o /dev/null --silent --compressed --connect-timeout "$TIMEOUT" --retry $RETRY --retry-delay $RETRY_DELAY --user-agent "$USER_AGENT" --write-out "%{$write_out}" $options "$url"
}

[ ! -d "$1" ] && echo "'$1'  is not a directory" && exit 1

# Some links may have a trailing \r, that must be removed...
URLS_AND_FILES=$(grep -RioE --exclude-dir={.git,.idea,target,output} --exclude=*.{class,png,svg,ttf} "$URL_REGEX" . | tr -d '\r')

# Links are processed in a random order to reduce the risk of being blacklisted and temporarily blocked
for url in $(echo "$URLS_AND_FILES" | cut -d ':' -f 2- | sort | uniq | sort -R); do
  if [[ "$url" =~ $EXCLUDED_URLS ]]; then
    echo -e "${LIGHT_GREEN}${url} (IGNORED)${NO_COLOR}"

  else
    # we could use --head, but it is not always supported...
    status=$(doCurl "$url" 'http_code')

    if [ "$status" = "200" ]; then
      if [[ $url =~ "http://" ]]; then
        https_status=$(doCurl "${url/http:\/\//https:\/\/}" 'http_code')

        if [ "$https_status" = "200" ]; then
          echo -e "${BLUE}${url} ($status) ${RED}(HTTPS link available)${NO_COLOR}"
        else
          echo -e "${GREEN}${url} ($status) (HTTPS link unavailable)${NO_COLOR}"
        fi
      else
        echo -e "${GREEN}${url} ($status)${NO_COLOR}"
      fi
    elif [ "$status" = '301' ] || [ "$status" = '302' ] || [ "$status" = '303' ]; then
      redirect_url=$(doCurl "$url" 'url_effective' '--location')

      if [[ "$url" =~ $EXCLUDED_REDIRECTS ]]; then
        echo -e "${GREEN}${url} ($status) (redirected to $redirect_url)${NO_COLOR}"
      else
        echo -e "${BLUE}${url} ($status) ${RED}(redirected to $redirect_url)${NO_COLOR}"
      fi
    else
      echo -e "${RED}${url} ($status)${NO_COLOR}"
    fi
  fi
done
